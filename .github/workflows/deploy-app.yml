name: ðŸš€ Build & Deploy

on:
  push:
    branches: [main]
  # semantic-release will create tags
  # no need to trigger this workflow on tag push directly

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semantic.outputs.release-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # required for semantic-release
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install release dependencies
        run: |
          npm install --save-dev \
            semantic-release \
            @semantic-release/changelog \
            @semantic-release/git \
            @semantic-release/github

      - name: Run semantic-release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            @semantic-release/github
            conventional-changelog-conventionalcommits
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

          
  build:
    needs: release
    runs-on: ubuntu-latest
    environment: production
    env:
      IMAGE_TAG: ${{ needs.release.outputs.version }}
      IMAGE: ${{ vars.ACR_NAME }}.azurecr.io/flask-app
      ACR: ${{ vars.ACR_NAME }}.azurecr.io
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - run: pip install -r requirements.txt
        working-directory: ./app

      - run: pytest
        working-directory: ./app

      - name: Build Docker image
        run: docker build -t flask-app:${{ github.sha }} .

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        run: az acr login --name ${{ vars.ACR_NAME }}

      - name: Push Docker image to ACR
        run: |
          echo "Image Tag: ${IMAGE_TAG}"   
          docker tag flask-app:${{ github.sha }} $ACR/flask-app:${IMAGE_TAG}
          docker push ${ACR}/flask-app:${IMAGE_TAG}

  deploy:
    needs: [release, build]
    runs-on: ubuntu-latest
    environment: production
    env:
      IMAGE_TAG: ${{ needs.release.outputs.version }}
      IMAGE: ${{ vars.ACR_NAME }}.azurecr.io/flask-app
      ACR: ${{ vars.ACR_NAME }}.azurecr.io
    steps:
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App (Linux Container)
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME }}
          images: ${{ env.ACR }}/flask-app:${{ env.IMAGE_TAG }}
